{
 "11": "    @json_dataset('data/dataset_11.json')\n    @clear_session({'spanId': 11})\n    def test_011_get_(self, data_row):\n        _meta_http_equiv, _script_document_cookie, class_classLoader_URLs_0_, content, expression = data_row\n\n        # GET http://front-end.sock-shop/ (endp 11)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('\"</script>', ''), ('\"><script>alert(\\'struts_sa_surl_xss.nasl-1603621900\\')</script>', ''), ('\"><script>alert(\\'struts_sa_surl_xss.nasl-1605657683\\')</script>', ''), ('\"><script>alert(\\'struts_sa_surl_xss.nasl-1605658393\\')</script>', ''), (\"('\\\\u0023_memberAccess[\\\\'allowStaticMethodAccess\\\\']')(meh)\", 'true'), ('(aaa)((\\'\\\\u0023context[\\\\\\'xwork.MethodAccessor.denyMethodExecution\\\\\\']\\\\u003d\\\\u0023foo\\')(\\\\u0023foo\\\\u003dnew java.lang.Boolean(\"false\")))', ''), (\"(asdf)(('\\\\u0023thread.sleep(5000)')(\\\\u0023thread\\\\u003d@java.lang.Thread@currentThread()))\", '1'), ('<meta http-equiv', _meta_http_equiv), ('<script>document.cookie', _script_document_cookie), ('XDEBUG_SESSION_START', 'phpstorm'), ('a', 'fetch'), ('class.classLoader.URLs[0]', class_classLoader_URLs_0_), ('content', content), ('debug', 'command'), ('expression', expression), ('ho {COMPLETE_VERSION}', '')])\n        resp = front_end_sock_shop.get('/' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "28": "    @clear_session({'spanId': 28})\n    def test_028_get_(self):\n        # GET http://front-end.sock-shop/ (endp 28)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n\n",
 "67": "    @clear_session({'spanId': 67})\n    def test_067_head_(self):\n        # HEAD http://front-end.sock-shop/ (endp 67)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.head('/')\n        resp.assert_status_code(200)\n\n",
 "133": "    @json_dataset('data/dataset_133.json')\n    @clear_session({'spanId': 133})\n    def test_133_get_(self, data_row):\n        content, s, vars_0_ = data_row\n\n        # GET http://front-end.sock-shop/ (endp 133)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('XDEBUG_SESSION_START', 'phpstorm'), ('a', 'fetch'), ('content', content), ('function', 'call_user_func_array'), ('s', s), ('vars[0]', vars_0_)])\n        resp = front_end_sock_shop.get('/' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "134": "    @clear_session({'spanId': 134})\n    def test_134_head_(self):\n        # HEAD http://front-end.sock-shop/ (endp 134)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.head('/')\n        resp.assert_status_code(200)\n\n",
 "154": "    @json_dataset('data/dataset_154.json')\n    @clear_session({'spanId': 154})\n    def test_154_get_(self, data_row):\n        content, = data_row\n\n        # GET http://front-end.sock-shop/ (endp 154)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('a', 'fetch'), ('content', content)])\n        resp = front_end_sock_shop.get('/' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "159": "    @clear_session({'spanId': 159})\n    def test_159_get_(self):\n        # GET http://front-end.sock-shop/ (endp 159)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "201": "    @clear_session({'spanId': 201})\n    def test_201_get_(self):\n        # GET http://front-end.sock-shop/ (endp 201)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "203": "    @clear_session({'spanId': 203})\n    def test_203_get_(self):\n        # GET http://front-end.sock-shop/ (endp 203)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "204": "    @clear_session({'spanId': 204})\n    def test_204_get_(self):\n        # GET http://front-end.sock-shop/ (endp 204)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "205": "    @clear_session({'spanId': 205})\n    def test_205_get_(self):\n        # GET http://front-end.sock-shop/ (endp 205)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "206": "    @clear_session({'spanId': 206})\n    def test_206_get_(self):\n        # GET http://front-end.sock-shop/ (endp 206)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "214": "    @clear_session({'spanId': 214})\n    def test_214_get_(self):\n        # GET http://front-end.sock-shop/ (endp 214)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "55": "    @json_dataset('data/dataset_55.json')\n    @clear_session({'spanId': 55})\n    def test_055_get_param(self, data_row):\n        param, = data_row\n\n        # GET http://front-end.sock-shop/{param} (endp 55)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f'/{param}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#top div.container div.offer a.btn.btn-success.btn-sm', expected_value='Offer of the day')\n\n",
 "151": "    @json_dataset('data/dataset_151.json')\n    @clear_session({'spanId': 151})\n    def test_151_get_param(self, data_row):\n        param, = data_row\n\n        # GET http://front-end.sock-shop/{param} (endp 151)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f'/{param}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "208": "    @json_dataset('data/dataset_208.json')\n    @clear_session({'spanId': 208})\n    def test_208_get_param____index_html(self, data_row):\n        param, = data_row\n\n        # GET http://front-end.sock-shop/{param}/../index.html (endp 208)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f'/{param}/../index.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "126": "    @json_dataset('data/dataset_126.json')\n    @clear_session({'spanId': 126})\n    def test_126_post_Licenses_licenseId(self, data_row):\n        licenseId, = data_row\n\n        # POST http://front-end.sock-shop/Licenses/{licenseId} (endp 126)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post(f'/Licenses/{licenseId}', data=[('chk', 'Test')])\n        resp.assert_status_code(100)\n\n",
 "123": "    @clear_session({'spanId': 123})\n    def test_123_get_SiteScope_(self):\n        # GET http://front-end.sock-shop/SiteScope/ (endp 123)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/SiteScope/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "68": "    @clear_session({'spanId': 68})\n    def test_068_get_address(self):\n        # GET http://front-end.sock-shop/address (endp 68)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/address', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "168": "    @clear_session({'spanId': 168})\n    def test_168_get_address(self):\n        # GET http://front-end.sock-shop/address (endp 168)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/address', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='elsewhere')\n\n",
 "169": "    @json_dataset('data/dataset_169.json')\n    @clear_session({'spanId': 169})\n    def test_169_post_addresses(self, data_row):\n        number, postcode = data_row\n\n        # POST http://front-end.sock-shop/addresses (endp 169)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        with open('data/payload_for_endp_169.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.number', number)\n        apply_into_json(json_payload, '$.postcode', postcode)\n        resp = front_end_sock_shop.post('/addresses', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "191": "    @json_dataset('data/dataset_191.json')\n    @clear_session({'spanId': 191})\n    def test_191_post_addresses(self, data_row):\n        number, postcode, userID = data_row\n\n        # POST http://user.sock-shop/addresses (endp 191)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        with open('data/payload_for_endp_191.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.number', number)\n        apply_into_json(json_payload, '$.postcode', postcode)\n        apply_into_json(json_payload, '$.userID', userID)\n        resp = user_sock_shop.post('/addresses', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "23": "    @json_dataset('data/dataset_23.json')\n    @clear_session({'spanId': 23})\n    def test_023_get_addresses_id(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/cards/{id} (endp 24)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        id1 = jsonpath('$.id', resp)\n\n        # GET http://user.sock-shop/addresses/{id} (endp 23)\n        resp = user_sock_shop.get(f'/addresses/{id1}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.country', expected_value='United Kingdom')\n\n",
 "131": "    @json_dataset('data/dataset_131.json')\n    @clear_session({'spanId': 131})\n    def test_131_get_addresses_id(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/cards/{id} (endp 24)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        id1 = jsonpath('$.id', resp)\n\n        # GET http://user.sock-shop/addresses/{id} (endp 131)\n        resp = user_sock_shop.get(f'/addresses/{id1}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n\n",
 "13": "    @clear_session({'spanId': 13})\n    def test_013_get_basket_html(self):\n        # GET http://front-end.sock-shop/basket.html (endp 13)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/basket.html')\n        resp.assert_status_code(201)\n\n",
 "14": "    @clear_session({'spanId': 14})\n    def test_014_get_basket_html(self):\n        # GET http://front-end.sock-shop/basket.html (endp 14)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/basket.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "170": "    @clear_session({'spanId': 170})\n    def test_170_get_basket_html(self):\n        # GET http://front-end.sock-shop/basket.html (endp 170)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/basket.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "103": "    @clear_session({'spanId': 103})\n    def test_103_get_c(self):\n        # GET http://front-end.sock-shop/c (endp 103)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/c')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "70": "    @clear_session({'spanId': 70})\n    def test_070_get_card(self):\n        # GET http://front-end.sock-shop/card (endp 70)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/card', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "171": "    @clear_session({'spanId': 171})\n    def test_171_get_card(self):\n        # GET http://front-end.sock-shop/card (endp 171)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/card', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "172": "    @json_dataset('data/dataset_172.json')\n    @clear_session({'spanId': 172})\n    def test_172_post_cards(self, data_row):\n        ccv, expires, longNum = data_row\n\n        # POST http://front-end.sock-shop/cards (endp 172)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        with open('data/payload_for_endp_172.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.ccv', ccv)\n        apply_into_json(json_payload, '$.expires', expires)\n        apply_into_json(json_payload, '$.longNum', longNum)\n        resp = front_end_sock_shop.post('/cards', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "192": "    @json_dataset('data/dataset_192.json')\n    @clear_session({'spanId': 192})\n    def test_192_post_cards(self, data_row):\n        ccv, expires, longNum, userID = data_row\n\n        # POST http://user.sock-shop/cards (endp 192)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        with open('data/payload_for_endp_192.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.ccv', ccv)\n        apply_into_json(json_payload, '$.expires', expires)\n        apply_into_json(json_payload, '$.longNum', longNum)\n        apply_into_json(json_payload, '$.userID', userID)\n        resp = user_sock_shop.post('/cards', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "24": "    @json_dataset('data/dataset_24.json')\n    @clear_session({'spanId': 24})\n    def test_024_get_cards_id(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/cards/{id} (endp 24)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "132": "    @json_dataset('data/dataset_132.json')\n    @clear_session({'spanId': 132})\n    def test_132_get_cards_id(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/cards/{id} (endp 132)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n\n",
 "15": "    @clear_session({'spanId': 15})\n    def test_015_delete_cart(self):\n        # DELETE http://front-end.sock-shop/cart (endp 15)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.delete('/cart')\n        resp.assert_status_code(202)\n\n",
 "16": "    @clear_session({'spanId': 16})\n    def test_016_post_cart(self):\n        # POST http://front-end.sock-shop/orders (endp 21)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        id_ = jsonpath('$.items[*].itemId', resp)\n\n        # POST http://front-end.sock-shop/cart (endp 16)\n        with open('data/payload_for_endp_16.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = front_end_sock_shop.post('/cart', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n\n",
 "33": "    @json_dataset('data/dataset_33.json')\n    @clear_session({'spanId': 33})\n    def test_033_post_cart(self, data_row):\n        size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # POST http://front-end.sock-shop/cart (endp 33)\n        with open('data/payload_for_endp_33.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = front_end_sock_shop.post('/cart', json=json_payload)\n        resp.assert_status_code(202)\n\n",
 "39": "    @clear_session({'spanId': 39})\n    def test_039_delete_cart(self):\n        # DELETE http://front-end.sock-shop/cart (endp 39)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.delete('/cart')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "47": "    @clear_session({'spanId': 47})\n    def test_047_get_cart(self):\n        # GET http://front-end.sock-shop/cart (endp 47)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "63": "    @clear_session({'spanId': 63})\n    def test_063_get_cart(self):\n        # GET http://front-end.sock-shop/cart (endp 63)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#copyright div.container div p.pull-left a', expected_value='Weaveworks')\n\n",
 "146": "    @clear_session({'spanId': 146})\n    def test_146_get_cart(self):\n        # GET http://front-end.sock-shop/cart (endp 146)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "174": "    @json_dataset('data/dataset_174.json')\n    @clear_session({'spanId': 174})\n    def test_174_post_cart(self, data_row):\n        page, size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 147)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', page), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # POST http://front-end.sock-shop/cart (endp 174)\n        with open('data/payload_for_endp_174.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = front_end_sock_shop.post('/cart', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n\n",
 "175": "    @clear_session({'spanId': 175})\n    def test_175_delete_cart(self):\n        # DELETE http://front-end.sock-shop/cart (endp 175)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.delete('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(202)\n\n",
 "73": "    @clear_session({'spanId': 73})\n    def test_073_delete_cart_itemId(self):\n        # GET http://front-end.sock-shop/cart (endp 47)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        itemId = jsonpath('$[*].itemId', resp)\n\n        # DELETE http://front-end.sock-shop/cart/{itemId} (endp 73)\n        resp = front_end_sock_shop.delete(f'/cart/{itemId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(202)\n\n",
 "7": "    @json_dataset('data/dataset_7.json')\n    @clear_session({'spanId': 7})\n    def test_007_delete_carts_customerId(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # DELETE http://carts.sock-shop/carts/{customerId} (endp 7)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}')\n        resp.assert_status_code(202)\n\n",
 "139": "    @json_dataset('data/dataset_139.json')\n    @clear_session({'spanId': 139})\n    def test_139_delete_carts_customerId(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # DELETE http://carts.sock-shop/carts/{customerId} (endp 139)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}')\n        resp.assert_status_code(202)\n\n",
 "8": "    @json_dataset('data/dataset_8.json')\n    @clear_session({'spanId': 8})\n    def test_008_post_carts_customerId_items(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        itemId = jsonpath('$.items[*].itemId', resp)\n        unitPrice = jsonpath('$.items[*].unitPrice', resp)\n        customerId = jsonpath('$.customerId', resp)\n\n        # POST http://carts.sock-shop/carts/{customerId}/items (endp 8)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        with open('data/payload_for_endp_8.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts_sock_shop.post(f'/carts/{customerId}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "26": "    @json_dataset('data/dataset_26.json')\n    @clear_session({'spanId': 26})\n    def test_026_get_carts_customerId_items(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 26)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "140": "    @json_dataset('data/dataset_140.json')\n    @clear_session({'spanId': 140})\n    def test_140_post_carts_customerId_items(self, data_row):\n        address, card, customer, items, page, size, tags = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 142)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n        itemId = jsonpath('$[*].itemId', resp)\n\n        # GET http://catalogue.sock-shop/catalogue (endp 137)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', page), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        unitPrice = jsonpath('$[*].price', resp)\n\n        # POST http://carts.sock-shop/carts/{customerId}/items (endp 140)\n        with open('data/payload_for_endp_140.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts_sock_shop.post(f'/carts/{customerId}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "142": "    @json_dataset('data/dataset_142.json')\n    @clear_session({'spanId': 142})\n    def test_142_get_carts_customerId_items(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 142)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "90": "    @json_dataset('data/dataset_90.json')\n    @clear_session({'spanId': 90})\n    def test_090_delete_carts_customerId_items_itemId(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 26)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n        itemId = jsonpath('$[*].itemId', resp)\n\n        # DELETE http://carts.sock-shop/carts/{customerId}/items/{itemId} (endp 90)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}/items/{itemId}')\n        resp.assert_status_code(202)\n\n",
 "9": "    @json_dataset('data/dataset_9.json')\n    @clear_session({'spanId': 9})\n    def test_009_get_carts_customerId_merge(self, data_row):\n        address, card, customer, items, sessionId = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/merge (endp 9)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts_sock_shop.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_status_code(202)\n\n",
 "141": "    @json_dataset('data/dataset_141.json')\n    @clear_session({'spanId': 141})\n    def test_141_get_carts_customerId_merge(self, data_row):\n        address, card, customer, items, sessionId = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/merge (endp 141)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts_sock_shop.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_status_code(202)\n\n",
 "1": "    @json_dataset('data/dataset_1.json')\n    @clear_session({'spanId': 1})\n    def test_001_get_catalogue(self, data_row):\n        size, tags = data_row\n\n        # GET http://catalogue.sock-shop/catalogue (endp 1)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n\n",
 "17": "    @json_dataset('data/dataset_17.json')\n    @clear_session({'spanId': 17})\n    def test_017_get_catalogue(self, data_row):\n        size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "46": "    @clear_session({'spanId': 46})\n    def test_046_get_catalogue(self):\n        # GET http://front-end.sock-shop/catalogue (endp 46)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/catalogue')\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "65": "    @json_dataset('data/dataset_65.json')\n    @clear_session({'spanId': 65})\n    def test_065_get_catalogue(self, data_row):\n        size, = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 65)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "121": "    @json_dataset('data/dataset_121.json')\n    @clear_session({'spanId': 121})\n    def test_121_get_catalogue(self, data_row):\n        size, = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 121)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('tags', 'large')])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "137": "    @json_dataset('data/dataset_137.json')\n    @clear_session({'spanId': 137})\n    def test_137_get_catalogue(self, data_row):\n        page, size, tags = data_row\n\n        # GET http://catalogue.sock-shop/catalogue (endp 137)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', page), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n\n",
 "147": "    @json_dataset('data/dataset_147.json')\n    @clear_session({'spanId': 147})\n    def test_147_get_catalogue(self, data_row):\n        page, size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 147)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', page), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "2": "    @json_dataset('data/dataset_2.json')\n    @clear_session({'spanId': 2})\n    def test_002_get_catalogue_id(self, data_row):\n        size, tags = data_row\n\n        # GET http://catalogue.sock-shop/catalogue (endp 1)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://catalogue.sock-shop/catalogue/{id} (endp 2)\n        resp = catalogue_sock_shop.get(f'/catalogue/{id_}')\n        resp.assert_status_code(200)\n\n",
 "48": "    @json_dataset('data/dataset_48.json')\n    @clear_session({'spanId': 48})\n    def test_048_get_catalogue_id(self, data_row):\n        page, size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 147)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', page), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://front-end.sock-shop/catalogue/{id} (endp 48)\n        resp = front_end_sock_shop.get(f'/catalogue/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "135": "    @json_dataset('data/dataset_135.json')\n    @clear_session({'spanId': 135})\n    def test_135_get_catalogue_id(self, data_row):\n        size, tags = data_row\n\n        # GET http://catalogue.sock-shop/catalogue (endp 1)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://catalogue.sock-shop/catalogue/{id} (endp 135)\n        resp = catalogue_sock_shop.get(f'/catalogue/{id_}')\n        resp.assert_status_code(200)\n\n",
 "166": "    @json_dataset('data/dataset_166.json')\n    @clear_session({'spanId': 166})\n    def test_166_get_catalogue_id(self, data_row):\n        page, size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 147)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', page), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://front-end.sock-shop/catalogue/{id} (endp 166)\n        resp = front_end_sock_shop.get(f'/catalogue/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "75": "    @clear_session({'spanId': 75})\n    def test_075_get_catalogue_size(self):\n        # GET http://front-end.sock-shop/tags (endp 83)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://front-end.sock-shop/catalogue/size (endp 75)\n        qstr = '?' + urlencode([('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue/size' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "85": "    @clear_session({'spanId': 85})\n    def test_085_get_catalogue_size(self):\n        # GET http://catalogue.sock-shop/tags (endp 87)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://catalogue.sock-shop/catalogue/size (endp 85)\n        qstr = '?' + urlencode([('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue/size' + qstr)\n        resp.assert_status_code(200)\n\n",
 "136": "    @clear_session({'spanId': 136})\n    def test_136_get_catalogue_size(self):\n        # GET http://catalogue.sock-shop/tags (endp 138)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://catalogue.sock-shop/catalogue/size (endp 136)\n        qstr = '?' + urlencode([('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue/size' + qstr)\n        resp.assert_status_code(200)\n\n",
 "177": "    @clear_session({'spanId': 177})\n    def test_177_get_catalogue_size(self):\n        # GET http://front-end.sock-shop/catalogue/size (endp 177)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', '')])\n        resp = front_end_sock_shop.get('/catalogue/size' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "18": "    @json_dataset('data/dataset_18.json')\n    @clear_session({'spanId': 18})\n    def test_018_get_category_html(self, data_row):\n        tags, = data_row\n\n        # GET http://front-end.sock-shop/category.html (endp 18)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', tags)])\n        resp = front_end_sock_shop.get('/category.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "179": "    @clear_session({'spanId': 179})\n    def test_179_get_category_html(self):\n        # GET http://front-end.sock-shop/category.html (endp 179)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '2')])\n        resp = front_end_sock_shop.get('/category.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "77": "    @json_dataset('data/dataset_77.json')\n    @clear_session({'spanId': 77})\n    def test_077_get_customer_order_html(self, data_row):\n        order, = data_row\n\n        # GET http://front-end.sock-shop/customer-order.html (endp 77)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('order', order)])\n        resp = front_end_sock_shop.get('/customer-order.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#customer-order div.box h2', expected_value='Order #')\n\n",
 "180": "    @json_dataset('data/dataset_180.json')\n    @clear_session({'spanId': 180})\n    def test_180_get_customer_order_html(self, data_row):\n        order, = data_row\n\n        # GET http://front-end.sock-shop/customer-order.html (endp 180)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('order', order)])\n        resp = front_end_sock_shop.get('/customer-order.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#customer-order div.box h2', expected_value='Order #')\n\n",
 "78": "    @clear_session({'spanId': 78})\n    def test_078_get_customer_orders_html(self):\n        # GET http://front-end.sock-shop/customer-orders.html (endp 78)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/customer-orders.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#customer-orders div.box h1', expected_value='My orders')\n\n",
 "181": "    @clear_session({'spanId': 181})\n    def test_181_get_customer_orders_html(self):\n        # GET http://front-end.sock-shop/customer-orders.html (endp 181)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/customer-orders.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#customer-orders div.box h1', expected_value='My orders')\n\n",
 "3": "    @json_dataset('data/dataset_3.json')\n    @clear_session({'spanId': 3})\n    def test_003_get_customers_customerId(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 3)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "50": "    @clear_session({'spanId': 50})\n    def test_050_get_customers_customerId(self):\n        # GET http://front-end.sock-shop/customers/{customerId} (endp 50)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f\"/customers/{str(get_data_from_cookie('logged_in'))}\", headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "127": "    @json_dataset('data/dataset_127.json')\n    @clear_session({'spanId': 127})\n    def test_127_get_customers_customerId(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 127)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n\n",
 "148": "    @clear_session({'spanId': 148})\n    def test_148_get_customers_customerId(self):\n        # GET http://front-end.sock-shop/customers/{customerId} (endp 148)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f\"/customers/{str(get_data_from_cookie('logged_in'))}\", headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "4": "    @json_dataset('data/dataset_4.json')\n    @clear_session({'spanId': 4})\n    def test_004_get_customers_customerId_addresses(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/addresses (endp 4)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}/addresses')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.address.[*].country', expected_value='United Kingdom')\n\n",
 "128": "    @json_dataset('data/dataset_128.json')\n    @clear_session({'spanId': 128})\n    def test_128_get_customers_customerId_addresses(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/addresses (endp 128)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}/addresses')\n        resp.assert_status_code(200)\n\n",
 "5": "    @json_dataset('data/dataset_5.json')\n    @clear_session({'spanId': 5})\n    def test_005_get_customers_customerId_cards(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 5)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n\n",
 "129": "    @json_dataset('data/dataset_129.json')\n    @clear_session({'spanId': 129})\n    def test_129_get_customers_customerId_cards(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 129)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n\n",
 "163": "    @clear_session({'spanId': 163})\n    def test_163_get_customers_wcbVLjJnpzpezACrWupvwuuQUEpXSBhZ(self):\n        # GET http://front-end.sock-shop/customers/wcbVLjJnpzpezACrWupvwuuQUEpXSBhZ (endp 163)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/customers/wcbVLjJnpzpezACrWupvwuuQUEpXSBhZ', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "19": "    @clear_session({'spanId': 19})\n    def test_019_get_detail_html(self):\n        # POST http://front-end.sock-shop/orders (endp 21)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        id_ = jsonpath('$.items[*].itemId', resp)\n\n        # GET http://front-end.sock-shop/detail.html (endp 19)\n        qstr = '?' + urlencode([('id', id_)])\n        resp = front_end_sock_shop.get('/detail.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "183": "    @json_dataset('data/dataset_183.json')\n    @clear_session({'spanId': 183})\n    def test_183_get_detail_html(self, data_row):\n        page, size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 147)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', page), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://front-end.sock-shop/detail.html (endp 183)\n        qstr = '?' + urlencode([('id', id_)])\n        resp = front_end_sock_shop.get('/detail.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "54": "    @clear_session({'spanId': 54})\n    def test_054_get_footer_html(self):\n        # GET http://front-end.sock-shop/footer.html (endp 54)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/footer.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#copyright div.container div p.pull-left a', expected_value='Weaveworks')\n\n",
 "101": "    @clear_session({'spanId': 101})\n    def test_101_get_footer_html(self):\n        # GET http://front-end.sock-shop/footer.html (endp 101)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/footer.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "149": "    @clear_session({'spanId': 149})\n    def test_149_get_footer_html(self):\n        # GET http://front-end.sock-shop/footer.html (endp 149)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/footer.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#copyright div.container div p.pull-left a', expected_value='Weaveworks')\n\n",
 "61": "    @json_dataset('data/dataset_61.json')\n    @clear_session({'spanId': 61})\n    def test_061_get_index_html(self, data_row):\n        urlmaskfilter, = data_row\n\n        # GET http://front-end.sock-shop/index.html (endp 61)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('urlmaskfilter', urlmaskfilter)])\n        resp = front_end_sock_shop.get('/index.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "184": "    @json_dataset('data/dataset_184.json')\n    @clear_session({'spanId': 184})\n    def test_184_get_index_html(self, data_row):\n        findcli, = data_row\n\n        # GET http://front-end.sock-shop/index.html (endp 184)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('findcli', findcli), ('test', '')])\n        resp = front_end_sock_shop.get('/index.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "210": "    @clear_session({'spanId': 210})\n    def test_210_head_index_html(self):\n        # HEAD http://front-end.sock-shop/index.html (endp 210)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.head('/index.html')\n        resp.assert_status_code(200)\n\n",
 "95": "    @json_dataset('data/dataset_95.json')\n    @clear_session({'spanId': 95})\n    def test_095_post_lib_phpunit_phpunit_src_Util_PHP_eval_stdin_php(self, data_row):\n        __, = data_row\n\n        # POST http://front-end.sock-shop/lib/phpunit/phpunit/src/Util/PHP/eval-stdin.php (endp 95)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/lib/phpunit/phpunit/src/Util/PHP/eval-stdin.php', data=[('<?', __), ('?>', '')])\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "6": "    # authentication-related test\n    @clear_session({'spanId': 6})\n    def test_006_get_login(self):\n        # GET http://user.sock-shop/login (endp 6)\n        user_sock_shop = get_http_client('http://user.sock-shop', dummy_auth)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n\n",
 "20": "    # authentication-related test\n    @clear_session({'spanId': 20})\n    def test_020_get_login(self):\n        # GET http://front-end.sock-shop/login (endp 20)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', dummy_auth)\n        resp = front_end_sock_shop.get('/login', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "130": "    # authentication-related test\n    @clear_session({'spanId': 130})\n    def test_130_get_login(self):\n        # GET http://user.sock-shop/login (endp 130)\n        user_sock_shop = get_http_client('http://user.sock-shop', dummy_auth)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n\n",
 "150": "    # authentication-related test\n    @clear_session({'spanId': 150})\n    def test_150_get_login(self):\n        # GET http://front-end.sock-shop/login (endp 150)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', dummy_auth)\n        resp = front_end_sock_shop.get('/login', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "10": "    @json_dataset('data/dataset_10.json')\n    @clear_session({'spanId': 10})\n    def test_010_post_orders(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "21": "    @clear_session({'spanId': 21})\n    def test_021_post_orders(self):\n        # POST http://front-end.sock-shop/orders (endp 21)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "22": "    @clear_session({'spanId': 22})\n    def test_022_post_orders(self):\n        # POST http://front-end.sock-shop/orders (endp 22)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "80": "    @clear_session({'spanId': 80})\n    def test_080_get_orders(self):\n        # GET http://front-end.sock-shop/orders (endp 80)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.[*].address.city', expected_value='Glasgow')\n\n",
 "155": "    @json_dataset('data/dataset_155.json')\n    @clear_session({'spanId': 155})\n    def test_155_post_orders(self, data_row):\n        address, card, customer, items, items1 = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 127)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        customer1 = jsonpath('$._links.self.href', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/addresses (endp 128)\n        resp = user_sock_shop.get(f'/customers/{customerId}/addresses')\n        resp.assert_status_code(200)\n        address1 = jsonpath('$._embedded.address[*]._links.address.href', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 129)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n        card1 = jsonpath('$._embedded.card[*]._links.card.href', resp)\n\n        # POST http://orders.sock-shop/orders (endp 155)\n        with open('data/payload_for_endp_155.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address1)\n        apply_into_json(json_payload, '$.card', card1)\n        apply_into_json(json_payload, '$.customer', customer1)\n        apply_into_json(json_payload, '$.items', items1)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "186": "    @clear_session({'spanId': 186})\n    def test_186_get_orders(self):\n        # GET http://front-end.sock-shop/orders (endp 186)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$[*].address.city', expected_value='elsewhere')\n\n",
 "187": "    @clear_session({'spanId': 187})\n    def test_187_post_orders(self):\n        # POST http://front-end.sock-shop/orders (endp 187)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='elsewhere')\n\n",
 "82": "    @clear_session({'spanId': 82})\n    def test_082_get_orders_id(self):\n        # GET http://front-end.sock-shop/orders (endp 80)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.[*].address.city', expected_value='Glasgow')\n        id_ = url_part('/2', jsonpath('$[*]._links.self.href', resp))\n\n        # GET http://front-end.sock-shop/orders/{id} (endp 82)\n        resp = front_end_sock_shop.get(f'/orders/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "92": "    @json_dataset('data/dataset_92.json')\n    @clear_session({'spanId': 92})\n    def test_092_get_orders_id(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        custId = jsonpath('$.customerId', resp)\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 94)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.customerOrders.[*].address.country', expected_value='United Kingdom')\n        id_ = url_part('/2', jsonpath('$._embedded.customerOrders[*]._links.self.href', resp))\n\n        # GET http://orders.sock-shop/orders/{id} (endp 92)\n        resp = orders_sock_shop.get(f'/orders/{id_}')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "188": "    @clear_session({'spanId': 188})\n    def test_188_get_orders_id(self):\n        # GET http://front-end.sock-shop/orders (endp 80)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.[*].address.city', expected_value='Glasgow')\n        id_ = url_part('/2', jsonpath('$[*]._links.self.href', resp))\n\n        # GET http://front-end.sock-shop/orders/{id} (endp 188)\n        resp = front_end_sock_shop.get(f'/orders/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.address.city', expected_value='elsewhere')\n\n",
 "199": "    @json_dataset('data/dataset_199.json')\n    @clear_session({'spanId': 199})\n    def test_199_get_orders_id(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        custId = jsonpath('$.customerId', resp)\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 94)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.customerOrders.[*].address.country', expected_value='United Kingdom')\n        id_ = url_part('/2', jsonpath('$._embedded.customerOrders[*]._links.self.href', resp))\n\n        # GET http://orders.sock-shop/orders/{id} (endp 199)\n        resp = orders_sock_shop.get(f'/orders/{id_}')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.address.city', expected_value='elsewhere')\n\n",
 "93": "    @json_dataset('data/dataset_93.json')\n    @clear_session({'spanId': 93})\n    def test_093_get_orders_search_customerId(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        custId = jsonpath('$.customerId', resp)\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 93)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_status_code(200)\n\n",
 "94": "    @json_dataset('data/dataset_94.json')\n    @clear_session({'spanId': 94})\n    def test_094_get_orders_search_customerId(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        custId = jsonpath('$.customerId', resp)\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 94)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.customerOrders.[*].address.country', expected_value='United Kingdom')\n\n",
 "156": "    @json_dataset('data/dataset_156.json')\n    @clear_session({'spanId': 156})\n    def test_156_get_orders_search_customerId(self, data_row):\n        address, card, customer, items, items1 = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 127)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        customer1 = jsonpath('$._links.self.href', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/addresses (endp 128)\n        resp = user_sock_shop.get(f'/customers/{customerId}/addresses')\n        resp.assert_status_code(200)\n        address1 = jsonpath('$._embedded.address[*]._links.address.href', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 129)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n        card1 = jsonpath('$._embedded.card[*]._links.card.href', resp)\n\n        # POST http://orders.sock-shop/orders (endp 155)\n        with open('data/payload_for_endp_155.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address1)\n        apply_into_json(json_payload, '$.card', card1)\n        apply_into_json(json_payload, '$.customer', customer1)\n        apply_into_json(json_payload, '$.items', items1)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        custId = jsonpath('$.customerId', resp)\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 156)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.customerOrders[*].address.city', expected_value='elsewhere')\n\n",
 "27": "    @json_dataset('data/dataset_27.json')\n    @clear_session({'spanId': 27})\n    def test_027_post_paymentAuth(self, data_row):\n        address, amount, card, city, customer, id_, items, lastName, longNum, number, username = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/cards/{id} (endp 24)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        ccv = jsonpath('$.ccv', resp)\n        expires = jsonpath('$.expires', resp)\n        id1 = jsonpath('$.id', resp)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 3)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        firstName = jsonpath('$.firstName', resp)\n\n        # GET http://user.sock-shop/addresses/{id} (endp 23)\n        resp = user_sock_shop.get(f'/addresses/{id1}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.country', expected_value='United Kingdom')\n        country = jsonpath('$.country', resp)\n        postcode = jsonpath('$.postcode', resp)\n        street = jsonpath('$.street', resp)\n\n        # POST http://payment.sock-shop/paymentAuth (endp 27)\n        payment_sock_shop = get_http_client('http://payment.sock-shop', authenticate)\n        with open('data/payload_for_endp_27.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.city', city)\n        apply_into_json(json_payload, '$.address.country', country)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.address.street', street)\n        apply_into_json(json_payload, '$.amount', amount)\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        apply_into_json(json_payload, '$.customer.firstName', firstName)\n        apply_into_json(json_payload, '$.customer.lastName', lastName)\n        apply_into_json(json_payload, '$.customer.username', username)\n        resp = payment_sock_shop.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "143": "    @json_dataset('data/dataset_143.json')\n    @clear_session({'spanId': 143})\n    def test_143_post_paymentAuth(self, data_row):\n        address, amount, card, city, customer, id_, items, lastName, longNum, number, username = data_row\n\n        # POST http://orders.sock-shop/orders (endp 10)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_10.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        customerId = jsonpath('$.customerId', resp)\n\n        # GET http://user.sock-shop/cards/{id} (endp 24)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        id1 = jsonpath('$.id', resp)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 127)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        firstName = jsonpath('$.firstName', resp)\n\n        # GET http://user.sock-shop/addresses/{id} (endp 131)\n        resp = user_sock_shop.get(f'/addresses/{id1}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        country = jsonpath('$.country', resp)\n        postcode = jsonpath('$.postcode', resp)\n        street = jsonpath('$.street', resp)\n\n        # GET http://user.sock-shop/cards/{id} (endp 132)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        ccv = jsonpath('$.ccv', resp)\n        expires = jsonpath('$.expires', resp)\n\n        # POST http://payment.sock-shop/paymentAuth (endp 143)\n        payment_sock_shop = get_http_client('http://payment.sock-shop', authenticate)\n        with open('data/payload_for_endp_143.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.city', city)\n        apply_into_json(json_payload, '$.address.country', country)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.address.street', street)\n        apply_into_json(json_payload, '$.amount', amount)\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        apply_into_json(json_payload, '$.customer.firstName', firstName)\n        apply_into_json(json_payload, '$.customer.lastName', lastName)\n        apply_into_json(json_payload, '$.customer.username', username)\n        resp = payment_sock_shop.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "102": "    @json_dataset('data/dataset_102.json')\n    @clear_session({'spanId': 102})\n    def test_102_post_plus_qiang_php(self, data_row):\n        blbl, = data_row\n\n        # POST http://front-end.sock-shop/plus/qiang.php (endp 102)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/plus/qiang.php', data=[('blbl', blbl)])\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "66": "    # authentication-related test\n    @clear_session({'spanId': 66})\n    def test_066_get_por_login_psw_csp(self):\n        # GET http://front-end.sock-shop/por/login_psw.csp (endp 66)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', dummy_auth)\n        resp = front_end_sock_shop.get('/por/login_psw.csp')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "189": "    # authentication-related test\n    @json_dataset('data/dataset_189.json')\n    @clear_session({'spanId': 189})\n    def test_189_post_register(self, data_row):\n        email_, firstName, lastName, password, username = data_row\n\n        # POST http://front-end.sock-shop/register (endp 189)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', dummy_auth)\n        with open('data/payload_for_endp_189.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.email', email_)\n        apply_into_json(json_payload, '$.firstName', firstName)\n        apply_into_json(json_payload, '$.lastName', lastName)\n        apply_into_json(json_payload, '$.password', password)\n        apply_into_json(json_payload, '$.username', username)\n        resp = front_end_sock_shop.post('/register', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "197": "    # authentication-related test\n    @json_dataset('data/dataset_197.json')\n    @clear_session({'spanId': 197})\n    def test_197_post_register(self, data_row):\n        email_, firstName, lastName, password, username = data_row\n\n        # POST http://user.sock-shop/register (endp 197)\n        user_sock_shop = get_http_client('http://user.sock-shop', dummy_auth)\n        with open('data/payload_for_endp_197.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.email', email_)\n        apply_into_json(json_payload, '$.firstName', firstName)\n        apply_into_json(json_payload, '$.lastName', lastName)\n        apply_into_json(json_payload, '$.password', password)\n        apply_into_json(json_payload, '$.username', username)\n        resp = user_sock_shop.post('/register', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "25": "    @json_dataset('data/dataset_25.json')\n    @clear_session({'spanId': 25})\n    def test_025_post_shipping(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/cards/{id} (endp 24)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        name = jsonpath('$.id', resp)\n\n        # POST http://shipping.sock-shop/shipping (endp 25)\n        shipping_sock_shop = get_http_client('http://shipping.sock-shop', authenticate)\n        with open('data/payload_for_endp_25.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping_sock_shop.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "144": "    @json_dataset('data/dataset_144.json')\n    @clear_session({'spanId': 144})\n    def test_144_post_shipping(self, data_row):\n        name, = data_row\n\n        # POST http://shipping.sock-shop/shipping (endp 144)\n        shipping_sock_shop = get_http_client('http://shipping.sock-shop', authenticate)\n        with open('data/payload_for_endp_144.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping_sock_shop.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "83": "    @clear_session({'spanId': 83})\n    def test_083_get_tags(self):\n        # GET http://front-end.sock-shop/tags (endp 83)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "87": "    @clear_session({'spanId': 87})\n    def test_087_get_tags(self):\n        # GET http://catalogue.sock-shop/tags (endp 87)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n\n",
 "138": "    @clear_session({'spanId': 138})\n    def test_138_get_tags(self):\n        # GET http://catalogue.sock-shop/tags (endp 138)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n\n",
 "190": "    @clear_session({'spanId': 190})\n    def test_190_get_tags(self):\n        # GET http://front-end.sock-shop/tags (endp 190)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "56": "    @clear_session({'spanId': 56})\n    def test_056_get_topbar_html(self):\n        # GET http://front-end.sock-shop/topbar.html (endp 56)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/topbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "152": "    @clear_session({'spanId': 152})\n    def test_152_get_topbar_html(self):\n        # GET http://front-end.sock-shop/topbar.html (endp 152)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/topbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#top div.container div.offer a.btn.btn-success.btn-sm', expected_value='Offer of the day')\n\n"
}